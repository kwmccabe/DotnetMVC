@model webapp.Models.Item

@{
    ViewData["Title"] = "Create Item";
}

<h1>@ViewData["Title"]</h1>
<nav aria-label="breadcrumb">
  <ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="/">Home</a></li>
    <li class="breadcrumb-item"><a asp-action="Index">Items</a></li>
    <li class="breadcrumb-item active" aria-current="page"><a asp-action="Create">@ViewData["Title"]</a></li>
  </ol>
</nav>
<hr size="1" />

<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="ItemType" class="control-label"></label>
                <select asp-for="ItemType" class="form-control" asp-items="ViewBag.ItemType"></select>
                <span asp-validation-for="ItemType" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Keyname" class="control-label"></label>
                <input asp-for="Keyname" class="form-control" />
                <span asp-validation-for="Keyname" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script type="text/javascript">
        $("#Keyname").on("change", function() {
            $("#Keyname").val(
                $("#Keyname").val().toLowerCase().replace(/[^a-z0-9._-]/g, '')
            );
        });</script>
}
